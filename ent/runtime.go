// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/shinhauhuang/go-fsm/ent/schema"
	"github.com/shinhauhuang/go-fsm/ent/statemachine"
	"github.com/shinhauhuang/go-fsm/ent/statetransition"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	statemachineFields := schema.StateMachine{}.Fields()
	_ = statemachineFields
	// statemachineDescMachineID is the schema descriptor for machine_id field.
	statemachineDescMachineID := statemachineFields[0].Descriptor()
	// statemachine.MachineIDValidator is a validator for the "machine_id" field. It is called by the builders before save.
	statemachine.MachineIDValidator = statemachineDescMachineID.Validators[0].(func(string) error)
	// statemachineDescCurrentState is the schema descriptor for current_state field.
	statemachineDescCurrentState := statemachineFields[1].Descriptor()
	// statemachine.CurrentStateValidator is a validator for the "current_state" field. It is called by the builders before save.
	statemachine.CurrentStateValidator = statemachineDescCurrentState.Validators[0].(func(string) error)
	statetransitionFields := schema.StateTransition{}.Fields()
	_ = statetransitionFields
	// statetransitionDescTimestamp is the schema descriptor for timestamp field.
	statetransitionDescTimestamp := statetransitionFields[3].Descriptor()
	// statetransition.DefaultTimestamp holds the default value on creation for the timestamp field.
	statetransition.DefaultTimestamp = statetransitionDescTimestamp.Default.(func() time.Time)
}
